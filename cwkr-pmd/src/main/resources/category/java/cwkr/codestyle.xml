<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="Java Style Rules"
        xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        Rules which enforce basic Java coding style.
    </description>

    <!-- Naming -->
    <rule ref="category/java/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]*" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/FieldNamingConventions">
        <properties>
            <property name="constantPattern" value="[A-Z][A-Z_0-9]*|logger" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/FormalParameterNamingConventions" />
    <rule ref="category/java/codestyle.xml/GenericsNaming" />
    <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions" />
    <rule ref="category/java/codestyle.xml/MethodNamingConventions" />
    <rule ref="category/java/codestyle.xml/PackageCase" />

    <!-- Syntax -->
    <rule ref="category/java/bestpractices.xml/DoubleBraceInitialization" />
    <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
    <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
    <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
    <rule ref="category/java/codestyle.xml/NoPackage" />
    <rule ref="category/java/codestyle.xml/ControlStatementBraces">
        <properties>
            <property name="checkSingleIfStmt" value="false" />
            <property name="checkCaseStmt" value="false" />
        </properties>
    </rule>
    <rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
    <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine">
        <properties>
            <property name="strictMode" value="true" />
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
    <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues">
        <properties>
            <property name="strict" value="true" />
        </properties>
    </rule>
    <rule ref="category/java/cwkr/custom.xml/AvoidFinalizeMethod" />

    <!-- Comparison -->
    <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />
    <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
    <rule ref="category/java/errorprone.xml/EqualsNull" />
    <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings" />
    <rule ref="category/java/errorprone.xml/BadComparison" />

    <!-- Switch statements -->
    <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
    <rule ref="category/java/errorprone.xml/MissingBreakInSwitch" />
    <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />

    <!-- Loops -->
    <rule ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables" />
    <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices" />
    <rule ref="category/java/bestpractices.xml/WhileLoopWithLiteralBoolean" />

    <!-- Literals -->
    <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition">
        <properties>
            <property name="ignoreMagicNumbers" value="-1,0,1" />
        </properties>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
        <properties>
            <property name="maxDuplicateLiterals" value="3" />
            <property name="minimumLength" value="1" />
            <property name="skipAnnotations" value="true" />
        </properties>
    </rule>

</ruleset>
